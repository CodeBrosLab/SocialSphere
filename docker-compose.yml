version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: socialsphere-db
    environment:
      POSTGRES_DB: socialspheredb
      POSTGRES_USER: spring
      POSTGRES_PASSWORD: spring
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - socialsphere-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spring -d socialspheredb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: socialsphere-backend
    ports:
      - "8080:8080"
    environment:
      DB_URL: jdbc:postgresql://db:5432/socialspheredb
      DB_USER: spring
      DB_PASSWORD: spring
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - socialsphere-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: socialsphere-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - socialsphere-network
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
    driver: local

networks:
  socialsphere-network:
    driver: bridge